@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <Link To=@($"user-profile/{context.User.Claims.FirstOrDefault(x => x.Type == "sub")?.Value}")>
            <Image Source=@(context.User.Claims.FirstOrDefault(x => x.Type == "picture")?.Value ?? "logos/person.svg") Class="rounded-circle profile" Border="Border.Is1"/>
        </Link>
        <Button Color="Color.Link" @onclick="BeginSignOut">Log out</Button>
    </Authorized>
    <NotAuthorized>
        <Button Color = "Color.Link" Type="ButtonType.Link" To="authentication/login">Log in</Button>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}

<style>
    .profile {
        width:30px;
        height: 30px;
        object-fit:cover;
        object-position:50% 50%;
    }
</style>