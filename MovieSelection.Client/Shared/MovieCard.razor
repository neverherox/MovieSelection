@inject ISavingService _savingService
@inject NavigationManager _navigation
@inject IMovieService _movieService

<Card Height="Height.Is100">
    <CardImage Source=@Movie.Image Style="height:65%"/>
    <CardBody Style="height:35%" TextOverflow="TextOverflow.Truncate">
        <CardTitle Size="5">
            <a href=@($"/movie/{Movie.Id}")>@Movie.Name</a>
        </CardTitle>
        <CardSubtitle Size="5">
            <div>
                <img src="logos/MovieCard/rating.svg">
                <span>@Math.Round(_rate.Value, 1)</span>
                <Icon Name="IconName.Bookmark" Class=@(_saveStyle + " " + "save-cursor") @onclick="() => SaveMovieAsync()" Style="float:right" />
            </div>
        </CardSubtitle>
        <CardText Class="lh-sm" TextOverflow="TextOverflow.Truncate">
            @Movie.Year,<br>
            @Movie.Country.Name,<br>
            @_genres
        </CardText>
    </CardBody>
</Card>

@code {

    [Parameter] public GetMovie Movie { get; set; }
    [Parameter] public ClaimsPrincipal User { get; set; }
    [Parameter] public EventCallback<int> OnSave { get; set; }

    private string _saveStyle = "not-saved";
    private Guid? _userId;
    private string _genres;
    private GetRate _rate;

    protected override async Task OnInitializedAsync()
    {
        Initialise();
        ApplySaveStyle();
        if (User.Identity != null && User.Identity.IsAuthenticated && User.IsInRole("user"))
        {
            var identity = User.Identity as ClaimsIdentity;
            var userIdClaim = identity.Claims.First(x => x.Type == "sub");
            _userId = Guid.Parse(userIdClaim.Value);
        }
        _rate = await _movieService.GetRateAsync(Movie.Id);
        _genres = string.Join(", ", Movie.Genres.Select(x => x.Name));
    }

    protected override void OnParametersSet()
    {
        ApplySaveStyle();
    }

    private async Task SaveMovieAsync()
    {
        if (_userId.HasValue)
        {
            var userSaving = Movie.Savings.FirstOrDefault(x => x.UserId == _userId && x.MovieId == Movie.Id);
            if (userSaving == null)
            {
                var saving = new PostSaving
                    {
                        UserId = _userId.Value,
                        MovieId = Movie.Id
                    };
                await _savingService.PostSavingAsync(saving);
            }
            else
            {
                await _savingService.DeleteSavingAsync(userSaving.Id);
            }
            await OnSave.InvokeAsync(Movie.Id);
        }
        else
        {
            _navigation.NavigateTo("authentication/login");
        }
    }

    public void ApplySaveStyle()
    {
        if (_userId.HasValue)
        {
            var userSaving = Movie.Savings.FirstOrDefault(x => x.UserId == _userId && x.MovieId == Movie.Id);
            if (userSaving == null)
            {
                _saveStyle = "not-saved";
            }
            else
            {
                _saveStyle = "saved";
            }
        }
    }

    private void Initialise()
    {
        _rate = new GetRate();
    }
}

<style>
    .saved {
        color: black;
    }

    .not-saved {
        color: lightgray;
    }

    .save-cursor {

    }

    .save-cursor:hover {
        cursor: pointer;
    }
</style>
