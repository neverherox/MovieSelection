@page "/movies/{Name}"
@page "/movies/highly-rated"
@page "/movies/novelties"

@inject NavigationManager _navigation
@inject IMovieService _movieService

<PageTitle>Movies</PageTitle>

<MovieFilter @bind-Movies="@_movies" AllMovies="@_allMovies"></MovieFilter>

<CardDeck>
    @foreach (var movie in _movies)
    {
        <MovieCard Movie="@movie" User="@_user" OnSave="OnSavedAsync"></MovieCard>
    }
</CardDeck>

@code {
    [Parameter] public string Name { get; set; }
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }

    private IEnumerable<GetMovie> _movies;
    private IEnumerable<GetMovie> _allMovies;
    private ClaimsPrincipal _user;

    protected override async Task OnInitializedAsync()
    {
        Initialise();
        if (_navigation.Uri.Contains("highly-rated"))
        {
            _allMovies = await _movieService.GetHighlyRatedMoviesAsync(100);
        }
        else if (_navigation.Uri.Contains("novelties"))
        {
            _allMovies = await _movieService.GetNoveltiesAsync(100);
        }
        else
        {
            _allMovies = await _movieService.GetMoviesAsync();
        }
        var authState = await authenticationStateTask;
        _user = authState.User;
    }

    protected override void OnParametersSet()
    {
        if (!string.IsNullOrEmpty(Name) && Name != "all")
        {
            _allMovies = _allMovies.Where(x => x.Name == Name).ToList();
            _movies = _allMovies.ToList();
        }
    }

    protected async Task OnSavedAsync(int movieId)
    {
        var getMovie = await _movieService.GetMovieAsync(movieId);
        var movie = _movies.First(x => x.Id == movieId);
        movie.Savings = getMovie.Savings.ToList();
    }

    private void Initialise()
    {
        _movies = new List<GetMovie>();
        _allMovies = new List<GetMovie>();
        _user = new ClaimsPrincipal();
    }
}
