@page "/movie/{Id:int}"
@inject IMovieService _movieService

<Div>
    <Div Display="Display.InlineBlock">
        <Figure Size="FigureSize.Is512x512" Display="Display.Block" Height="Height.Is25">
            <FigureImage Source="logos/movie.svg"/>
        </Figure>
        <button class="fas fa-bookmark @_saveStyle" @onclick="() => SaveMovieAsync()" style="float: right;"></button>
    </Div>
    <Div Display="Display.InlineBlock">
        <h1>@_movie.Name</h1>
        @_movie.Description<br>
        @_movie.Country.Name<br>
        @_movie.Year<br>
        @foreach (var genre in _movie.Genres)
        {
            @genre.Name<br>
        }
    </Div>
</Div>
<MovieRate Rate="@_rate" MovieId="@Id" OnRate="OnRatedAsync" User = "@_user" ></MovieRate>

<MovieReviews Reviews="@_reviews" MovieId="@Id" OnReview="OnReviewedAsync" User="@_user"></MovieReviews>

@foreach (var actor in _actors)
{
    <MovieSelection.Client.Shared.MovieActor Actor="@actor" />
}

@code {
    [Parameter] public int Id { get; set; }
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }

    private GetMovie _movie;
    private GetRate _rate;
    private IEnumerable<Actor> _actors;
    private IEnumerable<GetReview> _reviews;
    private ClaimsPrincipal _user;
    private bool _isSaved;
    private string _saveStyle = "not-saved";

    protected override async Task OnInitializedAsync()
    {
        Initialise();
        _movie = await _movieService.GetMovieAsync(Id);
        _rate = await _movieService.GetRateAsync(Id);
        _actors = await _movieService.GetActorsAsync(Id);
        _reviews = await _movieService.GetReviewsAsync(Id);
        var authState = await authenticationStateTask;
        _user = authState.User;
    }

    protected virtual async Task OnRatedAsync()
    {
        _rate = await _movieService.GetRateAsync(Id);
    }

    protected virtual async Task OnReviewedAsync()
    {
        _reviews = await _movieService.GetReviewsAsync(Id);
    }

    private void SaveMovieAsync()
    {
        _isSaved = !_isSaved;
        _saveStyle = _isSaved ? "saved" : "not-saved";
    }

    private void Initialise()
    {
        _movie = new GetMovie{Genres = new List<Genre>(), Country = new Country()};
        _rate = new GetRate{Rates = new List<Rate>()};
        _actors = new List<Actor>();
        _reviews = new List<GetReview>();
        _user = new ClaimsPrincipal();
    }
}
